<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Karampok on Konstantinos Karampogias</title>
    <link>http://www.karampok.me/authors/karampok/</link>
    <description>Recent content in Karampok on Konstantinos Karampogias</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 11 Feb 2018 21:06:48 +0100</lastBuildDate>
    
	<atom:link href="http://www.karampok.me/authors/karampok/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Chaining CNI Plugins</title>
      <link>http://www.karampok.me/posts/chained-plugins-cni/</link>
      <pubDate>Sun, 11 Feb 2018 21:06:48 +0100</pubDate>
      
      <guid>http://www.karampok.me/posts/chained-plugins-cni/</guid>
      <description>CNI (Container Network Interface) supports since version 0.3.0 chained plugins. This is a feature which can potential solve various cases. In the same time it keeps the container network stack clean. This post explains how chained plugins can be used in low level and how someone can extend the chain by adding a custom made CNI plugin. Whether your container orchestrator supports plugin chaining depends on which Container Runtime or which version is being used.</description>
    </item>
    
    <item>
      <title>How a Container Runtime is using CNI</title>
      <link>http://www.karampok.me/posts/container-networking-with-cni/</link>
      <pubDate>Sat, 20 Jan 2018 12:00:00 +0600</pubDate>
      
      <guid>http://www.karampok.me/posts/container-networking-with-cni/</guid>
      <description>The last couple of years I have been working with containers in low level. I learned how they work under the hood and I got familiar with container standards like OCI (Open Container Initiative) and CNI (Container Network Interface). When it comes to the runtime spec, there are quite many resources which explain in detail the runtime standard. On the other hand, there are not many resources about CNI, and it has not been clear to me how the runtime engine is using the CNI standard, as well as how difficult is to write a network CNI compatible plugin.</description>
    </item>
    
  </channel>
</rss>